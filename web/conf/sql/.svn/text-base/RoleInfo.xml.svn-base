<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="RoleInfo" >
  <resultMap id="RoleInfoResult" class="gnete.card.entity.RoleInfo" >
    <result column="ROLE_ID" property="roleId" />
    <result column="ROLE_NAME" property="roleName" />
    <result column="BRANCH_NO" property="branchNo" />
    <result column="MERCHANT_NO" property="merchantNo" />
    <result column="DEPT_ID" property="deptId" />
    <result column="ROLE_TYPE" property="roleType" />
    <result column="UPDATE_USER" property="updateUser" />
    <result column="UPDATE_TIME" property="updateTime" />
  </resultMap>
  <select id="findByPk" resultMap="RoleInfoResult" parameterClass="java.lang.String" >
    select ROLE_ID, ROLE_NAME, BRANCH_NO, MERCHANT_NO, DEPT_ID, ROLE_TYPE, UPDATE_USER, UPDATE_TIME
    from ROLE_INFO
    where ROLE_ID = #roleId:VARCHAR#
  </select>
  <select id="findByUserId" resultMap="RoleInfoResult" parameterClass="java.lang.String" >
    select ROLE_ID, ROLE_NAME, BRANCH_NO, MERCHANT_NO, DEPT_ID, ROLE_TYPE, UPDATE_USER, UPDATE_TIME
    from ROLE_INFO
    where ROLE_ID in (select role_id from user_role where user_id = #userId#)
  </select>
  <insert id="insert" parameterClass="gnete.card.entity.RoleInfo" >
    insert into ROLE_INFO (ROLE_ID, ROLE_NAME, BRANCH_NO, MERCHANT_NO, DEPT_ID,
      ROLE_TYPE, UPDATE_USER, UPDATE_TIME)
    values (#roleId:VARCHAR#, #roleName:VARCHAR#, #branchNo:VARCHAR#,
      #merchantNo:VARCHAR#, #deptId:VARCHAR#, #roleType:CHAR#, #updateUser#, #updateTime#)
  </insert>
  <update id="update" parameterClass="gnete.card.entity.RoleInfo" >
    update ROLE_INFO
    set ROLE_NAME = #roleName:VARCHAR#,
      BRANCH_NO = #branchNo:VARCHAR#,
      MERCHANT_NO = #merchantNo:VARCHAR#,
      DEPT_ID = #deptId:VARCHAR#,
      ROLE_TYPE = #roleType:CHAR#,
      UPDATE_USER = #updateUser#,
      UPDATE_TIME = #updateTime#
    where ROLE_ID = #roleId:VARCHAR#
  </update>
  <delete id="delete" parameterClass="java.lang.String" >
    delete from ROLE_INFO
    where ROLE_ID = #roleId:VARCHAR#
  </delete>
  
  <!-- #paginate -->
  <select id="findRole" resultMap="RoleInfoResult" parameterClass="java.util.Map" >
    select t.ROLE_ID, t.ROLE_NAME, t.BRANCH_NO, t.MERCHANT_NO, t.DEPT_ID, t.ROLE_TYPE, t.UPDATE_USER, t.UPDATE_TIME
    from ROLE_INFO t
      left join merch_info m on m.merch_id = t.merchant_no
  	  left join branch_info b on b.branch_code = t.branch_no
    <dynamic prepend="where">
    	<isNotEmpty prepend="and" property="branchCode">
			t.BRANCH_NO = #branchCode#
		</isNotEmpty>
    	<isNotEmpty prepend="and" property="merchCode">
			t.MERCHANT_NO = #merchCode#
		</isNotEmpty>
    	<isNotEmpty prepend="and" property="roleType">
			t.ROLE_TYPE = #roleType#
		</isNotEmpty>
    	<isNotEmpty prepend="and" property="departmentCode">
			t.DEPT_ID = #departmentCode#
		</isNotEmpty>
    	<isNotEmpty prepend="and" property="roleId">
			t.ROLE_ID = #roleId#
		</isNotEmpty>
    	<isNotEmpty prepend="and" property="roleName">
			t.ROLE_NAME like #roleName#
		</isNotEmpty>
		<!-- 分支机构登录时，查询自己和自己管理的机构，商户的角色 -->
		<isNotNull prepend="and" property="fenzhiList">
			(<iterate open=" t.branch_no in (" close=")" conjunction="," property="fenzhiList">
				#fenzhiList[].branchCode#
			</iterate>
			<iterate open=" or b.parent in (" close=")" conjunction="," property="fenzhiList">
				#fenzhiList[].branchCode#
			</iterate>
    		<iterate open=" or m.manage_branch in (" close=")" conjunction="," property="fenzhiList">
				#fenzhiList[].branchCode#
			</iterate>)
		</isNotNull>
		<!-- 发卡机构登录时，可以查询到自己和自己的下级的角色 -->
		<isNotNull prepend="and" property="cardBranchList">
			<iterate open=" t.branch_no in (" close=")" conjunction="," property="cardBranchList">
				#cardBranchList[].branchCode#
			</iterate>
		</isNotNull>
		<isNotNull prepend="and" property="union">
			(
				<isNotNull property="branchs">
					<iterate open=" t.BRANCH_NO in (" close=")" conjunction="," property="branchs">
						#branchs[].branchCode#
					</iterate>
				</isNotNull>
				<isEqual property="union_or" compareValue="true">
					or
				</isEqual>
				<isNotNull property="merchs">
					<iterate open=" t.MERCHANT_NO in (" close=")" conjunction="," property="merchs">
						#merchs[].merchId#
					</iterate>
				</isNotNull>
			)
		</isNotNull>
    </dynamic>
    order by t.UPDATE_TIME DESC
  </select>
  
  <select id="findCommonByRoleType" resultMap="RoleInfoResult" parameterClass="java.lang.String" >
    select ROLE_ID, ROLE_NAME, BRANCH_NO, MERCHANT_NO, DEPT_ID, ROLE_TYPE, UPDATE_USER, UPDATE_TIME
    from ROLE_INFO
    where ROLE_TYPE = #roleType# and BRANCH_NO is null and MERCHANT_NO is null and DEPT_ID is null
  </select>

  <select id="findByRoleName" resultMap="RoleInfoResult" parameterClass="java.lang.String" >
    select ROLE_ID, ROLE_NAME, BRANCH_NO, MERCHANT_NO, DEPT_ID, ROLE_TYPE, UPDATE_USER, UPDATE_TIME
    from ROLE_INFO
    where ROLE_NAME = #roleName#
  </select>
  
  <select id="findAssignRole" resultMap="RoleInfoResult" parameterClass="java.util.Map" >
    select ROLE_ID, ROLE_NAME, BRANCH_NO, MERCHANT_NO, DEPT_ID, ROLE_TYPE, UPDATE_USER, UPDATE_TIME
    from ROLE_INFO
    <dynamic prepend="where">
	    <isNotEmpty prepend="and" property="branchCode">
			BRANCH_NO = #branchCode#
		</isNotEmpty>
	    <isNotEmpty prepend="and" property="merchantNo">
			MERCHANT_NO = #merchantNo#
		</isNotEmpty>
	    <isNotEmpty prepend="and" property="deptId">
			DEPT_ID = #deptId#
		</isNotEmpty>
	    <isEmpty prepend="and" property="deptId">
			DEPT_ID is null
		</isEmpty>
	</dynamic>
  </select>
  
</sqlMap>