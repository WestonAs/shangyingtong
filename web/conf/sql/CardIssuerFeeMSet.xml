<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="CardIssuerFeeMSet" >
  <resultMap id="CardIssuerFeeMSetResult" class="gnete.card.entity.CardIssuerFeeMSet" >
    <result column="BRANCH_CODE" property="branchCode" />
    <result column="CHL_CODE" property="chlCode" />
    <result column="FEE_MONTH" property="feeMonth" />
    <result column="FEE_DATE" property="feeDate" />
    <result column="PROXY_ID" property="proxyId" />
    <result column="PROXY_FEE_AMT" property="proxyFeeAmt" />
    <result column="LAST_FEE" property="lastFee" />
    <result column="CHL_FEE_AMT" property="chlFeeAmt" />
    <result column="RECV_AMT" property="recvAmt" />
    <result column="NEXT_FEE" property="nextFee" />
    <result column="CHK_STATUS" property="chkStatus" />
    <result column="UPDATE_BY" property="updateBy" />
    <result column="UPDATE_TIME" property="updateTime" />
    <result column="CUR_CODE" property="curCode" />
  </resultMap>
  <resultMap class="gnete.card.entity.CardIssuerFeeMSet" id="CardIssuerFeeMSetNameResult" extends="CardIssuerFeeMSetResult">
    <result column="CHL_NAME" property="chlName" />
    <result column="BRANCH_NAME" property="branchName" />
  </resultMap>
  <select id="findByPk" resultMap="CardIssuerFeeMSetResult" parameterClass="gnete.card.entity.CardIssuerFeeMSetKey" >
    select BRANCH_CODE, CHL_CODE, FEE_MONTH, FEE_DATE, PROXY_ID, PROXY_FEE_AMT, LAST_FEE,
      CHL_FEE_AMT, RECV_AMT, NEXT_FEE, CHK_STATUS, UPDATE_BY, UPDATE_TIME, CUR_CODE
    from CARD_ISSUER_FEE_MSET
    where BRANCH_CODE = #branchCode:VARCHAR#
      and CHL_CODE = #chlCode:VARCHAR#
      and FEE_MONTH = #feeMonth:CHAR#
  </select>
  <insert id="insert" parameterClass="gnete.card.entity.CardIssuerFeeMSet" >
    insert into CARD_ISSUER_FEE_MSET (BRANCH_CODE, CHL_CODE, FEE_MONTH, FEE_DATE, PROXY_ID,
      PROXY_FEE_AMT, LAST_FEE, CHL_FEE_AMT, RECV_AMT, NEXT_FEE, CHK_STATUS, UPDATE_BY, UPDATE_TIME,
      CUR_CODE)
    values (#branchCode:VARCHAR#, #chlCode:VARCHAR#, #feeMonth:CHAR#, #feeDate:CHAR#,
      #proxyId:VARCHAR#, #proxyFeeAmt:DECIMAL#, #lastFee:DECIMAL#, #chlFeeAmt:DECIMAL#,
      #recvAmt:DECIMAL#, #nextFee:DECIMAL#, #chkStatus:CHAR#, #updateBy:VARCHAR#, #updateTime:DATE#,
      #curCode:CHAR#)
  </insert>
  <update id="update" parameterClass="gnete.card.entity.CardIssuerFeeMSet" >
    update CARD_ISSUER_FEE_MSET
    set FEE_DATE = #feeDate:CHAR#,
      PROXY_ID = #proxyId:VARCHAR#,
      PROXY_FEE_AMT = #proxyFeeAmt:DECIMAL#,
      LAST_FEE = #lastFee:DECIMAL#,
      CHL_FEE_AMT = #chlFeeAmt:DECIMAL#,
      RECV_AMT = #recvAmt:DECIMAL#,
      NEXT_FEE = #nextFee:DECIMAL#,
      CHK_STATUS = #chkStatus:CHAR#,
      UPDATE_BY = #updateBy:VARCHAR#,
      UPDATE_TIME = #updateTime:DATE#,
      CUR_CODE = #curCode:CHAR#
    where BRANCH_CODE = #branchCode:VARCHAR#
      and CHL_CODE = #chlCode:VARCHAR#
      and FEE_MONTH = #feeMonth:CHAR#
  </update>
  <delete id="delete" parameterClass="gnete.card.entity.CardIssuerFeeMSetKey" >
    delete from CARD_ISSUER_FEE_MSET
    where BRANCH_CODE = #branchCode:VARCHAR#
      and CHL_CODE = #chlCode:VARCHAR#
      and FEE_MONTH = #feeMonth:CHAR#
  </delete>
  
  <!-- #paginate -->
	<select id="findCardIssuerFeeMSet" parameterClass="java.util.Map" resultMap="CardIssuerFeeMSetNameResult">
	  select c.BRANCH_CODE, c.CHL_CODE, c.FEE_MONTH, c.FEE_DATE, c.PROXY_ID, c.PROXY_FEE_AMT, c.LAST_FEE,
      c.CHL_FEE_AMT, c.RECV_AMT, c.NEXT_FEE, c.CHK_STATUS, c.UPDATE_BY, c.UPDATE_TIME, c.CUR_CODE,
      (CASE WHEN b.BRANCH_CODE is not null THEN b.BRANCH_NAME ELSE '' END) as CHL_NAME,
      (CASE WHEN s.BRANCH_CODE is not null THEN s.BRANCH_NAME ELSE '' END) as BRANCH_NAME
    from CARD_ISSUER_FEE_MSET c left join BRANCH_INFO b on c.CHL_CODE = b.BRANCH_CODE
    left join BRANCH_INFO s on c.BRANCH_CODE = s.BRANCH_CODE 
   	<dynamic prepend="where">
		<isNotEmpty prepend="and" property="branchCode">
			c.BRANCH_CODE = #branchCode#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="branchName">
			s.BRANCH_NAME LIKE #branchName#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="chlCode">
			c.CHL_CODE = #chlCode#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="chlName">
			b.BRANCH_NAME LIKE #chlName#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="proxyId">
			c.PROXY_ID = #proxyId#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="chkStatus">
			c.CHK_STATUS = #chkStatus#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="startDate">
			<![CDATA[  c.FEE_MONTH >= #startDate#  ]]>
		</isNotEmpty>
	   	<isNotEmpty prepend="and" property="endDate">
			<![CDATA[  c.FEE_MONTH <= #endDate#  ]]>
		</isNotEmpty>
	</dynamic>
		order by c.BRANCH_CODE, c.FEE_MONTH, c.CHL_CODE, c.UPDATE_TIME DESC
	</select>
	
</sqlMap>